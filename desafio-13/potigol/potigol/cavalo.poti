d = [( 1, 2),(-2,-1),(-1,-2),( 2, 1),( 1,-2),( 2,-1),(-1, 2),(-2, 1)].inverta
xy2p(x, y: Inteiro): Inteiro = (x - 1) * 8 + y

soma(a: Lista[Inteiro], b: (Inteiro, Inteiro))
  x = (b.primeiro-1) div 32
  y = (b.primeiro-1) mod 8 div 4
  v = a[x * 2 + y+1]
  se b.segundo > 0 entao a.atualize(x * 2 + y,  v + 1) senao a fim
fim

tipo Tabuleiro
  linha, coluna : Inteiro
  quadrado: Lista[Inteiro]
  quantidade: Inteiro
  posicao = xy2p(linha, coluna)
  marcar(x, y: Inteiro) = Tabuleiro(x, y, quadrado.atualize(xy2p(x, y) - 1, quantidade + 1), quantidade + 1)

  texto() = quadrado.junte(" ")

  passos() = Lista(para i de 1 ate 64 gere i fim.zip(quadrado)._lista.sortBy(_._2)).mapeie(_.primeiro)
    .mapeie(p => "{(((p - 1) div 8) + 'a').caractere}{(p - 1) mod 8 + 1}" )

  q2(): Logico
    p = (linha + 1) div 2 * 16 - 8 + (coluna + 1) div 2 * 2
    escolha [quadrado[p], quadrado[p-1], quadrado[p-8], quadrado[p-9]].ordene
      caso [0,0,0,a] => a<=16
      caso [0,0,a,b] => a<=16 e b>16 e b<=32
      caso [0,a,b,c] => a<=16 e b>16 e b<=32 e c>32 e c<=48
      caso [a,b,c,d] => a<=16 e b>16 e b<=32 e c>32 e c<=48 e d>48
      caso _         => verdadeiro
    fim
  fim

  q4() = para i de 1 ate 64 gere i fim.zip(quadrado)
    .injete([0,0,0,0])(soma).selecione(n => n mod 4 <> 0).tamanho < 2

  proximos() =
    para xy em d,
          l em [linha + xy.primeiro], c em [coluna + xy.segundo]
          se l >= 1 e l <= 8 e c >= 1 e c <= 8 e quadrado[xy2p(l, c)] <= 0 e marcar(l,c).q2 e marcar(l,c).q4 gere marcar(l,c)
    fim
fim

tour(t: Tabuleiro): Tabuleiro =
  t.proximos.injete(t)((a,b) => se a.quantidade == 64 entao a senao tour(b) fim)

s = leia_texto
tab = Tabuleiro(0, 0, lista(64)(0), 0)
tab1 = tab.marcar(s[1] - 'a' + 1, s[2] - '0')
escreva tour(tab1).passos.junte("\n")
